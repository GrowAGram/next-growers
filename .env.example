# When adding additional environment variables,
# the schema in "/src/env.mjs" should be updated accordingly.

# DB / Prisma ORM
# https://www.prisma.io/docs/reference/database-reference/connection-urls#env
DATABASE_URL=file:./db.sqlite
# Supabase connection example: 
# Connect to Supabase via connection pooling with Supavisor.
DATABASE_URL="postgres://postgres.[Project-Reference-ID]:[Project-Password]@[YOUR-PROJECT-AWS-REGION].pooler.supabase.com:6543/[db-name]?pgbouncer=true&connection_limit=1"
#   parameter "pgbouncer=true" 
#       This disables Prisma from generating prepared statements. 
#       This is required since our connection pooler does not support prepared statements in transaction mode yet. 
#   parameter "connection_limit=1" 
#       This is only required if you are using Prisma from a serverless environment.
# Direct connection to the database. Used for migrations.
DIRECT_URL="postgres://postgres.[Project-Reference-ID]:[Project-Password]@[YOUR-PROJECT-AWS-REGION].pooler.supabase.com:5432/[db-name]"
     
# Next Auth
# You can generate a new secret on the command line with: 
# openssl rand -base64 32
# https://next-auth.js.org/configuration/options#secret
NEXTAUTH_SECRET=[YOUR RANDOM APP SECRET]
NEXTAUTH_URL=http://localhost:3000

# Next Auth Google Provider
# https://console.cloud.google.com/apis/dashboard
# https://console.cloud.google.com/apis/credentials
GOOGLE_CLIENT_ID=...apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=[YOUR GOOGLE CLIENT SECRET]

# Next Auth Twitter Provider
# https://developer.twitter.com/en/portal/dashboard
TWITTER_API_KEY=[YOUR TWITTER API KEY]
TWITTER_API_KEY_SECRET=[YOUR TWITTER API SECRET]

# Next Auth Email Server (Sendgrid Example)
EMAIL_SERVER=smtp://apikey:[YOUR SENDGRID API KEY]@smtp.sendgrid.net:587
EMAIL_FROM=Sender Name <sender@domain.tld>

# Cloudinary API
CLOUDINARY_API_KEY=[YOUR CLOUDINARY API KEY]
CLOUDINARY_API_SECRET=[YOUR CLOUDINARY API SECRET]
CLOUDINARY_NAME=[YOUR CLOUDINARY NAME]
